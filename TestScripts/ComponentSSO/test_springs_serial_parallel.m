%TEST_SPRINGS_SERIAL_PARALLEL Spring system design problem w/ component SSO 
%   TEST_SPRINGS_SERIAL_PARALLEL
%
%   Copyright 2025 Eduardo Rodrigues Della Noce
%   SPDX-License-Identifier: Apache-2.0

%   Licensed under the Apache License, Version 2.0 (the "License");
%   you may not use this file except in compliance with the License.
%   You may obtain a copy of the License at
%   
%       http://www.apache.org/licenses/LICENSE-2.0
%   
%   Unless required by applicable law or agreed to in writing, software
%   distributed under the License is distributed on an "AS IS" BASIS,
%   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
%   See the License for the specific language governing permissions and
%   limitations under the License.


%% Cleanup
fclose all;
close all;
clear all;
clc;
more off;
diary off;


%% debugging
rng(4);


%% Documentation / Archive
rngState = rng;
saveFolder = save_diary_files(mfilename);
goldenRatio = (1+sqrt(5))/2;
figureSize = [goldenRatio 1]*8.5;


%% system definition
systemFunction = @springs_serial_parallel_total_stiffness;

performanceLowerLimit = 3;
performanceUpperLimit = 5;


%% design space definition
systemParameter = {[1,2,3],[4,5,6]};
designSpaceLowerBound = [1,1,1,1,1,1];
designSpaceUpperBound = [30,30,30,30,30,30];
componentIndex = {[1,2,3]',[4,5,6]'};
initialDesign = [5,5,5,5,5,5];


%% solution space computation
bottomUpMapping = BottomUpMappingFunction(systemFunction,systemParameter);
designEvaluator = DesignEvaluatorBottomUpMapping(...
    bottomUpMapping,...
    performanceLowerLimit,...
    performanceUpperLimit);


timeElapsedAlgorithmPlanar = tic;
optionsPlanar = sso_stochastic_options('component',...
    'NumberSamplesPerIterationExploration',300,...
    'NumberSamplesPerIterationConsolidation',300,...
    'FixIterNumberExploration',true,...
    'FixIterNumberConsolidation',true,...
    'MaxIterExploration',50,...
    'MaxIterConsolidation',50,...
    'CandidateSpaceConstructor',@CandidateSpaceConvexHull,...
    'CandidateSpaceOptions',{'NormalizeVariables',true,'NormalizeGrowthDirection',true},...
    'TrimmingMethodFunction',@component_trimming_method_planar_trimming,...
    'TrimmingMethodOptions',{'NormalizeVariables',true},...
    'GrowthRate',0.2,...
    'UseAdaptiveGrowthRate',true,...
    'ApplyLeanness','never',...
    'UsePaddingSamplesInTrimming',true,...
    'UsePreviousEvaluatedSamplesConsolidation',false,...
    'ShapeSamplesUsefulExploration',false,...
    'ShapeSamplesUsefulConsolidation',false,...
    'TrimmingOperationOptions',{'PassesCriterion','reduced'},...
    'TrimmingOrderOptions',{'OrderPreference','score'});
[componentSolutionSpacePlanar,optimizationDataPlanar] = sso_component_stochastic(designEvaluator,...
    initialDesign,designSpaceLowerBound,designSpaceUpperBound,componentIndex,optionsPlanar);
toc(timeElapsedAlgorithmPlanar)

timeElapsedAlgorithmCornerBox = tic;
optionsCornerBox = sso_stochastic_options('component',...
    'NumberSamplesPerIterationExploration',300,...
    'NumberSamplesPerIterationConsolidation',300,...
    'FixIterNumberExploration',true,...
    'FixIterNumberConsolidation',true,...
    'MaxIterExploration',50,...
    'MaxIterConsolidation',50,...
    'CandidateSpaceConstructor',@CandidateSpaceCornerBoxRemoval,...
    'CandidateSpaceOptions',{'NormalizeGrowthDirection',true},...
    'TrimmingMethodFunction',@component_trimming_method_corner_box_removal,...
    'TrimmingMethodOptions',{'NormalizeVariables',true},...
    'GrowthRate',0.2,...
    'UseAdaptiveGrowthRate',true,...
    'ApplyLeanness','never',...
    'UsePaddingSamplesInTrimming',true,...
    'UsePreviousEvaluatedSamplesConsolidation',false,...
    'ShapeSamplesUsefulExploration',false,...
    'ShapeSamplesUsefulConsolidation',false,...
    'TrimmingOperationOptions',{'PassesCriterion','reduced'},...
    'TrimmingOrderOptions',{'OrderPreference','score'});
[componentSolutionSpaceCornerBox,optimizationDataCornerBox] = sso_component_stochastic(designEvaluator,...
    initialDesign,designSpaceLowerBound,designSpaceUpperBound,componentIndex,optionsCornerBox);
toc(timeElapsedAlgorithmCornerBox)


%% plot component solution spaces
nComponent = length(componentSolutionSpacePlanar);
for i=1:nComponent
    figure;
    componentSolutionSpacePlanar(i).plot_candidate_space(gcf,'FaceColor','g','EdgeColor','g','FaceAlpha',0.1);
    hold on;
    componentSolutionSpaceCornerBox(i).plot_candidate_space(gcf,'FaceColor','b','EdgeColor','none','FaceAlpha',0.1);
    title(['Component ',num2str(i)]);
    legend('Planar Trimming','Corner Box Removal');
    save_print_figure(gcf,[saveFolder,'ComponentSolutionSpace',num2str(i)],'PrintFormat',{'png','pdf'});
end

%% plot results and metrics
% Individual results - Planar Trimming
resultsFolder = [saveFolder,'ResultsPlanarTrimming/'];
mkdir(resultsFolder);
algoDataPlanar = postprocess_sso_component_stochastic(optimizationDataPlanar);
plot_sso_component_stochastic_metrics(algoDataPlanar,...
    'SaveFolder',resultsFolder,...
    'CloseFigureAfterSaving',true,...
    'SaveFigureOptions',{'Size',figureSize,'PrintFormat',{'png','pdf'}});

% Individual results - Corner Box Removal
resultsFolder = [saveFolder,sprintf('ResultsCornerBoxRemoval/')];
mkdir(resultsFolder);
algoDataCornerBox = postprocess_sso_component_stochastic(optimizationDataCornerBox);
plot_sso_component_stochastic_metrics(algoDataCornerBox,...
    'SaveFolder',resultsFolder,...
    'CloseFigureAfterSaving',true,...
    'SaveFigureOptions',{'Size',figureSize,'PrintFormat',{'png','pdf'}});

% Comparison plots
resultsFolder = [saveFolder,'ResultsComparison/'];
mkdir(resultsFolder);
plot_sso_comparison_box_component_stochastic_metrics(...
    {},...  % No box data in this case
    {algoDataPlanar,algoDataCornerBox},...
    'ComponentLabel',{'Planar Trimming','Corner Box Removal'},...
    'ComponentColor',color_palette_tol({'green','blue'}),...
    'SaveFolder',resultsFolder,...
    'CloseFigureAfterSaving',true,...
    'SaveFigureOptions',{'Size',figureSize,'PrintFormat',{'png','pdf'}});


%% see component progress
initialPlotOptions = {'EdgeColor','none','FaceColor',color_palette_tol('blue'),'FaceAlpha',0.2};
grownPlotOptions = {'EdgeColor','none','FaceColor',color_palette_tol('green'),'FaceAlpha',0.2};
trimmedPlotOptions = {'EdgeColor','none','FaceColor',color_palette_tol('red'),'FaceAlpha',0.2};
plot_sso_component_evolution(optimizationDataCornerBox,...
    'InitialPlotOptions',initialPlotOptions,...
    'GrownPlotOptions',grownPlotOptions,...
    'TrimmedPlotOptions',trimmedPlotOptions,...
    'IterationIndices',[48 49 50 51]);


%% Save and Stop Transcripting
save([saveFolder,'Data.mat']);
diary off;

